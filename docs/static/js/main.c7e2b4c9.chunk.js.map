{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","nro1","setNro1","nro2","setNro2","operacion","setOperacion","resul","setResul","clickNro","value","clickOperacion","className","onClick","Number","clickResul","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAyEeA,MAtEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,SAASC,EAAUC,GACA,KAAdL,EACDH,EAAQD,EAAOS,GAGfN,EAAQD,EAAOO,GAGnB,SAASC,EAAeD,GACtBJ,EAAaI,GAwBf,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAY,QAAhB,mCACA,sBAAKA,UAAY,mBAAjB,UACE,sBAAKA,UAAY,SAAjB,UACE,qBAAKA,UAAY,WAAjB,SAA6BL,EAAQN,EAAOI,EAAYF,EACvDE,EAAYJ,EAAOI,EAAY,KAChC,qBAAKO,UAAY,WAAjB,SAA6BL,IAAkBF,EAAmBF,EAAPF,QAE7D,wBAAQY,QAAW,WAdvBX,EAAQ,IACRE,EAAQ,IACRE,EAAa,IACbE,EAAS,KAWiCI,UAAY,KAAlD,gBACA,wBAAQC,QAAW,WAAOF,EAAe,MAAzC,eACA,wBAAQE,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOF,EAAe,MAAzC,eACA,wBAAQE,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOF,EAAe,MAAzC,eACA,wBAAQE,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOF,EAAe,MAAzC,eACA,wBAAQE,QAAW,WAAOJ,EAAS,IAAnC,eACA,wBAAQI,QAAW,WAAOJ,EAAS,MAAnC,eACA,wBAAQI,QAAW,YA/CzB,WACE,OAAOR,GACL,IAAK,IACHG,EAASM,OAAOb,GAAQa,OAAOX,IAC/B,MACF,IAAK,IACHK,EAASM,OAAOb,GAAQa,OAAOX,IAC/B,MACF,IAAK,IACHK,EAASM,OAAOb,GAAQa,OAAOX,IAC/B,MACF,IAAK,IACHK,EAASM,OAAOb,GAAQa,OAAOX,KAmCLY,IAAeH,UAAY,QAArD,kBAEF,oBAAIA,UAAY,SAAhB,8DCxDSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c7e2b4c9.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [nro1, setNro1] = useState(\"\");\n  const [nro2, setNro2] = useState(\"\");\n  const [operacion, setOperacion] = useState(\"\");\n  const [resul, setResul] = useState(0);\n  function clickNro (value){\n    if(operacion === \"\"){\n      setNro1(nro1 + value);\n    }\n    else{\n      setNro2(nro2 + value);\n    }\n  }\n  function clickOperacion(value){\n    setOperacion(value);\n  }\n  function clickResul(){\n    switch(operacion){\n      case \"+\":\n        setResul(Number(nro1) + Number(nro2));\n        break;\n      case \"-\":\n        setResul(Number(nro1) - Number(nro2));\n        break;\n      case \"x\":\n        setResul(Number(nro1) * Number(nro2));\n        break;\n      case \"/\":\n        setResul(Number(nro1) / Number(nro2));\n        break;\n    }\n  }\n  function clickAC(){\n    setNro1(\"\");\n    setNro2(\"\");\n    setOperacion(\"\");\n    setResul(\"\");\n  }\n  return (\n    <div className=\"App\">\n      <h1 className = \"title\">Calculadora con react</h1>\n      <div className = \"Calculadora-grid\">\n        <div className = \"output\">\n          <div className = \"Operando\">{resul ? nro1 + operacion + nro2 : \n          (operacion ? nro1 + operacion : \"\")}</div>\n          <div className = \"Operador\">{resul ? resul : (!operacion ? nro1 : nro2)}</div>\n        </div>\n        <button onClick = {() => {clickAC()}} className = \"AC\">AC</button>\n        <button onClick = {() => {clickOperacion(\"/\")}}>/</button>\n        <button onClick = {() => {clickNro(7)}}>7</button>\n        <button onClick = {() => {clickNro(8)}}>8</button>\n        <button onClick = {() => {clickNro(9)}}>9</button>\n        <button onClick = {() => {clickOperacion(\"x\")}}>x</button>\n        <button onClick = {() => {clickNro(4)}}>4</button>\n        <button onClick = {() => {clickNro(5)}}>5</button>\n        <button onClick = {() => {clickNro(6)}}>6</button>\n        <button onClick = {() => {clickOperacion(\"+\")}}>+</button>\n        <button onClick = {() => {clickNro(1)}}>1</button>\n        <button onClick = {() => {clickNro(2)}}>2</button>\n        <button onClick = {() => {clickNro(3)}}>3</button>\n        <button onClick = {() => {clickOperacion(\"-\")}}>-</button>\n        <button onClick = {() => {clickNro(0)}}>0</button>\n        <button onClick = {() => {clickNro(\".\")}}>.</button>\n        <button onClick = {() => {clickResul()}} className = \"igual\">=</button>\n      </div>\n      <h2 className = \"Alumno\">Gallegos Qui√±ones, Fredy Julmer    120886</h2>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}